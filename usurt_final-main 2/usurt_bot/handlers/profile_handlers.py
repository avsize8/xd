import logging

from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message
from database import Database
from key_boards.main_menu import get_gender_keyboard, get_main_keyboard, get_cancel_keyboard, get_edit_profile_keyboard

logger = logging.getLogger(__name__)


class ProfileStates(StatesGroup):
    name = State()
    age = State()
    gender = State()
    faculty = State()
    course = State()
    bio = State()
    photo = State()


def setup_profile_handlers(router: Router, db: Database):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏"""

    @router.message(F.text == "–°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É")
    async def create_profile(message: Message, state: FSMContext):
        await message.answer("üìù –î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", reply_markup=get_cancel_keyboard())
        await state.set_state(ProfileStates.name)

    @router.message(F.text == "–û—Ç–º–µ–Ω–∞")
    async def cancel_profile_creation(message: Message, state: FSMContext):
        """–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã"""
        await state.clear()
        await message.answer("‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=get_main_keyboard())

    @router.message(ProfileStates.name)
    async def process_name(message: Message, state: FSMContext):
        if len(message.text.strip()) < 2:
            await message.answer("‚ö†Ô∏è –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞", reply_markup=get_cancel_keyboard())
            return
        await state.update_data(name=message.text.strip())
        await message.answer("üî¢ –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?", reply_markup=get_cancel_keyboard())
        await state.set_state(ProfileStates.age)

    @router.message(ProfileStates.age)
    async def process_age(message: Message, state: FSMContext):
        if not message.text.isdigit() or not (16 <= int(message.text) <= 99):
            await message.answer(
                "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ –æ—Ç 16 –¥–æ 99)", reply_markup=get_cancel_keyboard()
            )
            return
        await state.update_data(age=int(message.text))
        await message.answer("üöª –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:", reply_markup=get_gender_keyboard())
        await state.set_state(ProfileStates.gender)

    @router.message(ProfileStates.gender)
    async def process_gender(message: Message, state: FSMContext):
        gender = message.text.strip().lower()
        if gender not in ["–º—É–∂—Å–∫–æ–π", "–∂–µ–Ω—Å–∫–∏–π"]:
            await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã!")
            return
        await state.update_data(gender=gender)
        logger.info(f"–ü–æ–ª –≤—ã–±—Ä–∞–Ω: {gender}, —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")
        await message.answer("üßë‚Äçüéì –£–∫–∞–∂–∏ —Å–≤–æ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç", reply_markup=types.ReplyKeyboardRemove())
        await state.set_state(ProfileStates.faculty)

    @router.message(ProfileStates.faculty)
    async def process_faculty(message: Message, state: FSMContext):
        if len(message.text.strip()) < 3:
            await message.answer(
                "‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞", reply_markup=get_cancel_keyboard()
            )
            return
        await state.update_data(faculty=message.text.strip())
        await message.answer("üéì –ù–∞ –∫–∞–∫–æ–º —Ç—ã –∫—É—Ä—Å–µ? (–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7)", reply_markup=get_cancel_keyboard())
        await state.set_state(ProfileStates.course)

    @router.message(ProfileStates.course)
    async def process_course(message: Message, state: FSMContext):
        if not message.text.isdigit() or not (1 <= int(message.text) <= 7):
            await message.answer(
                "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫—É—Ä—Å (—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7)", reply_markup=get_cancel_keyboard()
            )
            return
        await state.update_data(course=int(message.text))
        await message.answer("üìñ –†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)", reply_markup=get_cancel_keyboard())
        await state.set_state(ProfileStates.bio)

    @router.message(ProfileStates.bio)
    async def process_bio(message: Message, state: FSMContext):
        if len(message.text.strip()) < 10:
            await message.answer(
                "‚ö†Ô∏è –†–∞—Å—Å–∫–∞–∑ –æ —Å–µ–±–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤", reply_markup=get_cancel_keyboard()
            )
            return
        await state.update_data(bio=message.text.strip())
        await message.answer("üì∏ –ü—Ä–∏—à–ª–∏ —Å–≤–æ–µ —Ñ–æ—Ç–æ", reply_markup=get_cancel_keyboard())
        await state.set_state(ProfileStates.photo)

    @router.message(ProfileStates.photo)
    async def process_photo(message: Message, state: FSMContext):
        if not message.photo:
            await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ", reply_markup=get_cancel_keyboard())
            return

        data = await state.get_data()
        photo_id = message.photo[-1].file_id

        try:
            db.save_profile(message.from_user.id, {**data, "photo_id": photo_id})
            profile_text = (
                "üéâ –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞!\n\n"
                f"–ò–º—è: {data['name']}\n"
                f"–í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
                f"–ü–æ–ª: {data['gender'].capitalize()}\n"
                f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {data['faculty']}\n"
                f"–ö—É—Ä—Å: {data['course']}\n"
                f"–û —Å–µ–±–µ: {data['bio']}"
            )
            await message.answer_photo(
                photo=photo_id, caption=profile_text, reply_markup=get_main_keyboard()
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        finally:
            await state.clear()

    @router.message(F.text == "–ú–æ—è –∞–Ω–∫–µ—Ç–∞")
    async def show_my_profile(message: Message):
        profile = db.get_profile(message.from_user.id)
        if not profile:
            await message.answer("‚ùå –£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã. –°–æ–∑–¥–∞–π –µ–µ!")
            return

        profile_text = (
            "üë§ –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n"
            f"–ò–º—è: {profile['name']}\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {profile['age']}\n"
            f"–ü–æ–ª: {profile['gender'].capitalize()}\n"
            f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {profile['faculty']}\n"
            f"–ö—É—Ä—Å: {profile['course']}\n"
            f"–û —Å–µ–±–µ: {profile['bio']}"
        )

        if profile.get("photo_id"):
            await message.answer_photo(photo=profile["photo_id"], caption=profile_text, reply_markup=get_edit_profile_keyboard())
        else:
            await message.answer(profile_text, reply_markup=get_edit_profile_keyboard())

    @router.callback_query(F.data.startswith("edit_"))
    async def edit_profile_field(callback: types.CallbackQuery, state: FSMContext):
        field = callback.data.replace("edit_", "")
        await state.update_data(edit_field=field)
        prompts = {
            "name": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:",
            "age": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç:",
            "gender": "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ–ª:",
            "faculty": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç:",
            "course": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å:",
            "bio": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
            "photo": "–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ:",
        }
        if field == "gender":
            await callback.message.answer(prompts[field], reply_markup=get_gender_keyboard())
        elif field == "photo":
            await callback.message.answer(prompts[field])
        else:
            await callback.message.answer(prompts[field], reply_markup=get_cancel_keyboard())
        await state.set_state(ProfileStates.__getattribute__(ProfileStates, field))
        await callback.answer()

    @router.message(ProfileStates.name)
    async def edit_name(message: Message, state: FSMContext):
        db.save_profile(message.from_user.id, {**db.get_profile(message.from_user.id), "name": message.text})
        await state.clear()
        await message.answer("–ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", reply_markup=get_main_keyboard())

    @router.message(ProfileStates.age)
    async def edit_age(message: Message, state: FSMContext):
        db.save_profile(message.from_user.id, {**db.get_profile(message.from_user.id), "age": int(message.text)})
        await state.clear()
        await message.answer("–í–æ–∑—Ä–∞—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=get_main_keyboard())

    @router.message(ProfileStates.gender)
    async def edit_gender(message: Message, state: FSMContext):
        db.save_profile(message.from_user.id, {**db.get_profile(message.from_user.id), "gender": message.text.lower()})
        await state.clear()
        await message.answer("–ü–æ–ª –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=get_main_keyboard())

    @router.message(ProfileStates.faculty)
    async def edit_faculty(message: Message, state: FSMContext):
        db.save_profile(message.from_user.id, {**db.get_profile(message.from_user.id), "faculty": message.text})
        await state.clear()
        await message.answer("–§–∞–∫—É–ª—å—Ç–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=get_main_keyboard())

    @router.message(ProfileStates.course)
    async def edit_course(message: Message, state: FSMContext):
        db.save_profile(message.from_user.id, {**db.get_profile(message.from_user.id), "course": int(message.text)})
        await state.clear()
        await message.answer("–ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=get_main_keyboard())

    @router.message(ProfileStates.bio)
    async def edit_bio(message: Message, state: FSMContext):
        db.save_profile(message.from_user.id, {**db.get_profile(message.from_user.id), "bio": message.text})
        await state.clear()
        await message.answer("–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", reply_markup=get_main_keyboard())

    @router.message(ProfileStates.photo)
    async def edit_photo(message: Message, state: FSMContext):
        if not message.photo:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ.")
            return
        photo_id = message.photo[-1].file_id
        db.save_profile(message.from_user.id, {**db.get_profile(message.from_user.id), "photo_id": photo_id})
        await state.clear()
        await message.answer("–§–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", reply_markup=get_main_keyboard())

    @router.message(F.text == "–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
    async def delete_profile(message: Message):
        try:
            db.delete_profile(message.from_user.id)
            await message.answer(
                "‚ùå –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.",
                reply_markup=get_main_keyboard(),
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã.")

    @router.message(F.text == "–û—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
    async def disable_profile(message: Message):
        try:
            db.set_profile_active(message.from_user.id, False)
            await message.answer(
                "‚è∏Ô∏è –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã—Ç–∞ –∏ –Ω–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º.",
                reply_markup=get_main_keyboard(),
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã.")

    @router.message(F.text == "–í–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
    async def enable_profile(message: Message):
        try:
            db.set_profile_active(message.from_user.id, True)
            await message.answer(
                "‚úÖ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —Å–Ω–æ–≤–∞ –≤–∏–¥–Ω–∞ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!",
                reply_markup=get_main_keyboard(),
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã.")
