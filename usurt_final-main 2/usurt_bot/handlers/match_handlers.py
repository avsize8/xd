import logging

from aiogram import F, Router
from aiogram.types import CallbackQuery, Message
from database import Database
from key_boards.main_menu import get_main_keyboard, get_match_keyboard

logger = logging.getLogger(__name__)


def setup_match_handlers(router: Router, db: Database):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –º–∞—Ç—á–µ–π"""

    @router.message(F.text == "–ú–æ–∏ –º–∞—Ç—á–∏")
    async def show_matches(message: Message):
        try:
            matches = db.get_mutual_likes(message.from_user.id)

            if not matches:
                await message.answer(
                    "üíî –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –≤–∑–∞–∏–º–Ω—ã—Ö –ª–∞–π–∫–æ–≤.\n"
                    "–ü—Ä–æ–¥–æ–ª–∂–∞–π –∏—Å–∫–∞—Ç—å - —Ç–≤–æ—è –ª—é–±–æ–≤—å –∂–¥–µ—Ç! üíï",
                    reply_markup=get_main_keyboard(),
                )
                return

            match_text = f"üíï –£ —Ç–µ–±—è {len(matches)} –≤–∑–∞–∏–º–Ω—ã—Ö –ª–∞–π–∫–æ–≤!\n\n"
            for i, match in enumerate(matches[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                match_text += (
                    f"{i}. {match['name']} ({match['age']} –ª–µ—Ç)\n"
                    f"   {match['faculty']}, {match['course']} –∫—É—Ä—Å\n"
                    f"   {match['bio'][:50]}{'...' if len(match['bio']) > 50 else ''}\n\n"
                )

            if len(matches) > 5:
                match_text += f"... –∏ –µ—â–µ {len(matches) - 5} –º–∞—Ç—á–µ–π!"

            await message.answer(match_text, reply_markup=get_main_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Ç—á–µ–π: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Ç—á–µ–π.")

    @router.message(F.text == "–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    async def show_user_stats(message: Message):
        try:
            profile = db.get_profile(message.from_user.id)
            if not profile:
                await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –∞–Ω–∫–µ—Ç—É!")
                return

            likes_given = db.get_user_likes_count(message.from_user.id)
            likes_received = db.get_user_likes_received_count(message.from_user.id)
            matches_count = len(db.get_mutual_likes(message.from_user.id))

            stats_text = (
                f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {profile['name']}:\n\n"
                f"‚ù§Ô∏è –ü–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ª–∞–π–∫–æ–≤: {likes_given}\n"
                f"üíñ –ü–æ–ª—É—á–µ–Ω–æ –ª–∞–π–∫–æ–≤: {likes_received}\n"
                f"üíï –í–∑–∞–∏–º–Ω—ã—Ö –ª–∞–π–∫–æ–≤: {matches_count}\n\n"
            )

            if likes_received > 0:
                response_rate = (matches_count / likes_received) * 100
                stats_text += f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∑–∞–∏–º–Ω–æ—Å—Ç–∏: {response_rate:.1f}%"
            else:
                stats_text += "üìà –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∑–∞–∏–º–Ω–æ—Å—Ç–∏: 0%"

            await message.answer(stats_text, reply_markup=get_main_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

    @router.callback_query(F.data.startswith("match_"))
    async def show_match_profile(callback: CallbackQuery):
        try:
            match_user_id = int(callback.data.split("_")[1])
            match_profile = db.get_profile(match_user_id)

            if not match_profile:
                await callback.answer("‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
                return

            profile_text = (
                "üíï –í–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫!\n\n"
                f"–ò–º—è: {match_profile['name']}\n"
                f"–í–æ–∑—Ä–∞—Å—Ç: {match_profile['age']}\n"
                f"–ü–æ–ª: {match_profile['gender'].capitalize()}\n"
                f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {match_profile['faculty']}\n"
                f"–ö—É—Ä—Å: {match_profile['course']}\n"
                f"–û —Å–µ–±–µ: {match_profile['bio']}"
            )

            if match_profile.get("photo_id"):
                await callback.message.answer_photo(
                    photo=match_profile["photo_id"],
                    caption=profile_text,
                    reply_markup=get_match_keyboard(match_user_id),
                )
            else:
                await callback.message.answer(
                    profile_text, reply_markup=get_match_keyboard(match_user_id)
                )

            await callback.answer()

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–∞—Ç—á–∞: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–∞—Ç—á–∞", show_alert=True)
